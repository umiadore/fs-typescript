import styles from './lesson13.module.css';
import * as Yup from 'yup';
import { useFormik } from "formik";
import MyButton from "../../components/myButton/MyButton";

interface IFormValues {
  model: string;
  creator: string;
  email: string;
}

// * —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ Yup
// number() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
// .typeError('message') - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Ç–∏–ø–∞
// .integer('message') –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ + —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
// .required('message') - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª–µ
// .min(100, 'message') - –Ω–µ –º–µ–Ω—å—à–µ —á–µ–º —ç—Ç–æ —á–∏—Å–ª–æ (–¥–ª—è —á–∏—Å–ª–∞)
// .max(1500, 'message') - –Ω–µ –±–æ–ª—å—à–µ —á–µ–º —ç—Ç–æ —á–∏—Å–ª–æ (–¥–ª—è —á–∏—Å–ª–∞)
// .email('incorrect email format') - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç email
// .min(100, 'message') - –Ω–µ –º–µ–Ω—å—à–µ —á–µ–º —ç—Ç–æ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ (–¥–ª—è —Å—Ç—Ä–æ–∫–∏)
// .max(1500, 'message') - –Ω–µ –±–æ–ª—å—à–µ —á–µ–º —ç—Ç–æ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ (–¥–ª—è —Å—Ç—Ä–æ–∫–∏)


// * —Å–æ–∑–¥–∞–ª–∏ —Å—Ö–µ–º—É –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
// –ø–æ–¥–∫–ª—é—á–∞—Ç—å –±—É–¥–µ–º –≤ formik
const schema = Yup.object().shape({
  model: Yup
    .number()
    .typeError('model is a number')
    .required('model is required')
    .integer('model is integer')
    .min(100, 'model number is more than 100')
    .max(1500, 'model number is less than 1500'),
  creator: Yup
    .string()
    .typeError('creator is a string')
    .required('creator is required'),
  email: Yup
    .string()
    .typeError('email is a string')
    .email('incorrect email format')
    .max(50, 'less than 50 symbols, please')
});

export default function Lesson13(): JSX.Element {

  const formik = useFormik({
    initialValues: {
      model: '500',
      creator: 'skynet',
      email: 'skynet@gmail.com'
    } as IFormValues,
    // –ø–æ–¥–∫–ª—é—á–∞–µ–º Yup –∫ Formik
    validationSchema:schema,
    validateOnChange:false,
    onSubmit: (values, { resetForm }) => {
      console.log(values);
      resetForm();
    }
  });

  return (
    <div className={styles.formContainer}>
      <h2>Lesson 13: YUP validation üîê</h2>
      <form onSubmit={formik.handleSubmit} className={styles.robotForm}>
        <input onChange={formik.handleChange} name="model" type="text" placeholder="model" value={formik.values.model} />
        <input onChange={formik.handleChange} name="creator" type="text" placeholder="creator" value={formik.values.creator} />
        <input onChange={formik.handleChange} name="email" type="text" placeholder="email" value={formik.values.email} />
        <MyButton />
      </form>
      {/* –æ—à–∏–±–∫–∏ –∑–∞–±–∏—Ä–∞–µ–º –∏–∑ formik –æ–ø –∫–ª—é—á–∞–º */}
      <span>{formik.errors.model}</span>
      <span>{formik.errors.creator}</span>
      <span>{formik.errors.email}</span>
    </div>
  );
}
